#!/bin/bash

set -e

# Start timer
START_TIME=$(date +%s)

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo "🚀 Hackathon Project Creator"
echo "============================"
echo ""
echo "1. 🟢 Minimal Next.js (7 packages) - Pure Next.js + TypeScript"
echo "2. 🟡 Enhanced Next.js (13 packages) - Tailwind + utilities"
echo "3. 🐍 FastAPI - Modern Python API"
echo "4. 🕸️  Neo4j Graph - Database + frontend"
echo ""

while true; do
    read -p "Choose template (1-4): " choice
    case $choice in
        [1-4]) break;;
        *) echo -e "${RED}Please enter 1, 2, 3, or 4${NC}";;
    esac
done

while true; do
    read -p "Project name: " name
    if [[ -n "$name" && "$name" =~ ^[a-zA-Z0-9_-]+$ ]]; then
        break
    else
        echo -e "${RED}Use letters, numbers, hyphens, underscores only${NC}"
    fi
done

# Check if project exists
if [ -d "/workspace/$name" ]; then
    echo -e "${YELLOW}Project '$name' already exists!${NC}"
    read -p "Delete existing project? (y/N): " delete_existing
    if [[ $delete_existing =~ ^[Yy]$ ]]; then
        rm -rf "/workspace/$name"
        echo -e "${GREEN}Deleted existing project${NC}"
    else
        echo "Aborting..."
        exit 1
    fi
fi

# Get script directory
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

case $choice in
    1) 
        echo -e "${BLUE}Creating minimal Next.js project...${NC}"
        
        if [ ! -d "$SCRIPT_DIR/templates/nextjs-minimal" ]; then
            echo -e "${RED}Template not found: $SCRIPT_DIR/templates/nextjs-minimal${NC}"
            exit 1
        fi
        
        cp -r "$SCRIPT_DIR/templates/nextjs-minimal" "/workspace/$name"
        cd "/workspace/$name"
        
        echo "Installing dependencies (7 packages)..."
        npm install --progress=true
        
        echo ""
        echo -e "${GREEN}✅ Minimal Next.js project '$name' ready!${NC}"
        echo ""
        echo "🚀 Commands:"
        echo "   cd /workspace/$name"
        echo "   npm run dev"
        echo ""
        echo "🌐 Visit: http://localhost:3000"
        echo ""
        echo "📦 Add features as needed:"
        echo "   npm install tailwindcss          # Styling"
        echo "   npm install @prisma/client       # Database"
        echo "   npm install react-hook-form      # Forms"
        ;;
        
    2) 
        echo -e "${BLUE}Creating enhanced Next.js project...${NC}"
        
        if [ ! -d "$SCRIPT_DIR/nextjs-ultimate" ]; then
            echo -e "${RED}Enhanced template not found${NC}"
            exit 1
        fi
        
        cp -r "$SCRIPT_DIR/nextjs-ultimate" "/workspace/$name"
        rm -rf "/workspace/$name/node_modules" "/workspace/$name/package-lock.json" 2>/dev/null
        cd "/workspace/$name"
        
        echo "Installing dependencies (13 packages)..."
        npm install --progress=true
        
        echo ""
        echo -e "${GREEN}✅ Enhanced Next.js project '$name' ready!${NC}"
        echo ""
        echo "🚀 Commands:"
        echo "   cd /workspace/$name"
        echo "   npm run dev"
        echo ""
        echo "✨ Includes: Tailwind CSS, dark mode, utilities"
        ;;
        
    3) 
        echo -e "${BLUE}Creating FastAPI project...${NC}"
        
        if [ ! -d "$SCRIPT_DIR/python-ai" ]; then
            echo -e "${RED}FastAPI template not found${NC}"
            exit 1
        fi
        
        cp -r "$SCRIPT_DIR/python-ai" "/workspace/$name"
        
        echo ""
        echo -e "${GREEN}✅ FastAPI project '$name' ready!${NC}"
        echo ""
        echo "🚀 Commands:"
        echo "   cd /workspace/$name"
        echo "   pip install -r requirements.txt"
        echo "   uvicorn app.main:app --reload"
        echo ""
        echo "🌐 API: http://localhost:8000"
        echo "📖 Docs: http://localhost:8000/docs"
        ;;
        
    4)
        echo -e "${BLUE}Creating Neo4j graph project...${NC}"
        
        if [ ! -d "$SCRIPT_DIR/neo4j" ]; then
            echo -e "${RED}Neo4j template not found${NC}"
            exit 1
        fi
        
        cp -r "$SCRIPT_DIR/neo4j" "/workspace/$name"
        rm -rf "/workspace/$name/node_modules" "/workspace/$name/package-lock.json" 2>/dev/null
        cd "/workspace/$name"
        
        echo "Installing dependencies..."
        npm install --progress=true
        
        echo ""
        echo -e "${GREEN}✅ Neo4j project '$name' ready!${NC}"
        echo ""
        echo "🚀 Commands:"
        echo "   cd /workspace/$name"
        echo "   docker-compose up -d    # Start database"
        echo "   npm run dev            # Start frontend"
        echo ""
        echo "🌐 App: http://localhost:3000"
        echo "🗄️  Neo4j: http://localhost:7474"
        ;;
esac

# Calculate build time
END_TIME=$(date +%s)
BUILD_TIME=$((END_TIME - START_TIME))
MINUTES=$((BUILD_TIME / 60))
SECONDS=$((BUILD_TIME % 60))

echo ""
echo -e "${GREEN}🎉 Project '$name' created successfully!${NC}"

# Display build time
if [ $MINUTES -gt 0 ]; then
    echo -e "${BLUE}⏱️  Build time: ${MINUTES}m ${SECONDS}s${NC}"
else
    echo -e "${BLUE}⏱️  Build time: ${SECONDS}s${NC}"
fi

echo "📖 Check README.md for more details"
echo "🏆 Happy hacking!"